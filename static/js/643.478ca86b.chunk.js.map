{"version":3,"file":"static/js/643.478ca86b.chunk.js","mappings":"2RAYaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,SACNC,QAAQ,SACRC,UAEAL,EAAAA,EAAAA,KAAA,QAAMM,SAnBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfZ,GACEa,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACP,EASkCC,aAAa,MAAKZ,UAC9Ca,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAS,EAAEf,SAAA,EAChBa,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAAhB,SAAA,EACVL,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAAAjB,SAAC,WACXL,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CAACC,KAAK,QAAQC,KAAK,cAE3BP,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAAhB,SAAA,EACVL,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAAAjB,SAAC,cACXL,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CAACC,KAAK,WAAWC,KAAK,iBAE9BzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CAACF,KAAK,SAASG,YAAY,OAAMtB,SAAC,iBAOnD,ECrCA,EAXkB,WAChB,OACEa,EAAAA,EAAAA,MAACU,EAAAA,GAAc,CAAAvB,SAAA,EACbL,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CAAAxB,UACLL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,aAETL,EAAAA,EAAAA,KAACH,EAAS,MAGhB,C,6KCkDaI,GAAO6B,EAAAA,EAAAA,IAA6B,SAAcC,EAAOC,GACpE,IAAQC,EACNF,EADME,UAAW9B,EACjB4B,EADiB5B,MAAOC,EACxB2B,EADwB3B,QAAS8B,EACjCH,EADiCG,KAAMC,EACvCJ,EADuCI,MAAOC,EAC9CL,EAD8CK,KAAMC,EACpDN,EADoDM,OAAWC,GAAAA,EAAAA,EAAAA,GAC/DP,EAAAA,GAEIQ,EAAS,CACbC,QAAS,OACTC,cAAeR,EACfS,WAAYvC,EACZwC,eAAgBvC,EAChBwC,SAAUV,EACVW,UAAWV,EACXW,SAAUV,EACVW,WAAYV,GAGd,OAAO,SAACW,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,GAAAA,CAACjB,IAAAA,EAAUkB,MAAOX,GAAYD,GAClD,IAEArC,EAAKkD,YAAc,M","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","../node_modules/@chakra-ui/layout/src/flex.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperations';\n\nimport {\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Stack,\n} from '@chakra-ui/react';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Flex\n      minHeight=\"100vh\"\n      align=\"center\"\n      justify=\"center\"\n      // Optional background color\n    >\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Stack spacing={4}>\n          <FormControl>\n            <FormLabel>Email</FormLabel>\n            <Input type=\"email\" name=\"email\" />\n          </FormControl>\n          <FormControl>\n            <FormLabel>Password</FormLabel>\n            <Input type=\"password\" name=\"password\" />\n          </FormControl>\n          <Button type=\"submit\" colorScheme=\"blue\">\n            Log In\n          </Button>\n        </Stack>\n      </form>\n    </Flex>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </HelmetProvider>\n  );\n};\n\nexport default LoginPage;\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n"],"names":["LoginForm","dispatch","useDispatch","_jsx","Flex","minHeight","align","justify","children","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","_jsxs","Stack","spacing","FormControl","FormLabel","Input","type","name","Button","colorScheme","HelmetProvider","Helmet","forwardRef","props","ref","direction","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","chakra","div","__css","displayName"],"sourceRoot":""}